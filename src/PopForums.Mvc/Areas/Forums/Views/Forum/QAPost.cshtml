@model QAPostItemContainer
@inject IUserRetrievalShim UserRetrievalShim
@{
	var user = UserRetrievalShim.GetUser();
	var profile = UserRetrievalShim.GetProfile();
	var hideVanity = false;
	if (profile != null)
	{ hideVanity = profile.HideVanity; }

	string deleteLink;
	if (Model.Post.IsDeleted)
	{ deleteLink = PopForums.Resources.Undelete; }
	else if (Model.Post.IsFirstInTopic)
	{ deleteLink = PopForums.Resources.DeleteTopic; }
	else
	{ deleteLink = PopForums.Resources.Delete; }
    
	var isLoggedIn = user != null;
	var isAuthor = user?.UserID == Model.Post.UserID;
	var isVoted = isLoggedIn && !isAuthor && Model.VotedPostIDs.Contains(Model.Post.PostID);
}
<a name="@Model.Post.PostID"></a>
<div class="@(Model.Post.IsDeleted ? "bg-warning " : "") row postItem flex-nowrap my-3" data-postID="@Model.Post.PostID" data-topicid="@Model.Topic.TopicID">
	<div class="answerData col-2 text-center">
		<pf-votecount votes="@Model.Post.Votes" postid="@Model.Post.PostID" votescontainerclass="voters" badgeclass="voteCount badge bg-primary m-auto d-block mb-3 fs-5" isloggedin="@isLoggedIn.ToString()" isauthor="@isAuthor.ToString()" isvoted="@isVoted.ToString()" votebuttonclass="m-auto fs-2"></pf-votecount>

		<pf-answerbutton postid="@Model.Post.PostID" topicid="@Model.Topic.TopicID" answerstatusclass="answerStatus" chooseanswertext="@PopForums.Resources.ChooseAnswer" answerpostid="@Model.Topic.AnswerPostID" userid="@user?.UserID" startedbyuserid="@Model.Topic.StartedByUserID" isfirstintopic="@Model.Post.IsFirstInTopic.ToString()"></pf-answerbutton>
	</div>
	<div class="col-10">
		<div class="postUserData bg-primary rounded mb-2 px-3 py-1">
			<pf-postminiprofile username="@Model.Post.Name" userid="@Model.Post.UserID" miniprofileboxclass="miniProfileBox bg-light text-dark rounded" usernameclass="text-light"></pf-postminiprofile>
			<small class="postTime text-end text-light">
				@if (user != null && user.IsInRole(PermanentRoles.Moderator))
				{
					@:IP: @Model.Post.IP -
				}
				<pf-formattedtime utctime="@Model.Post.PostTime.ToString("o")"></pf-formattedtime>
			</small>
		</div>
		@if (!hideVanity && Model.Avatars.ContainsKey(Model.Post.UserID))
		{
			<img src="@Url.Action("Avatar", "Image", new { id = (Model.Avatars)[Model.Post.UserID] })" alt="@String.Format(PopForums.Resources.NameAvatar, Model.Post.Name)" class="avatar float-end ms-3 mb-3 d-none d-sm-block" />
		}

		<div class="@if (Model.PostWithChildren.LastReadTime.HasValue && Model.PostWithChildren.Post.PostTime > Model.PostWithChildren.LastReadTime)
	{<text>newPostBlock</text>}">@Html.Raw(Model.Post.FullText)</div>
		@if (Model.Post.IsEdited && Model.Post.LastEditTime.HasValue)
		{
			<small>@String.Format(PopForums.Resources.NameLastEdit, Model.Post.LastEditName), <pf-formattedtime utctime="@Model.Post.LastEditTime.Value.ToString("o")"></pf-formattedtime></small>
		}

		@if (Model.Post.ShowSig && !hideVanity && (Model.Signatures).ContainsKey(Model.Post.UserID))
		{
			<hr />
			<div class="text-secondary">@Html.Raw((Model.Signatures)[Model.Post.UserID])</div>
		}
		<div class="superToolBox">
			<div class="my-3 d-flex postToolContainer">
				<div class="toolButton"><a asp-controller="Forum" asp-action="PostLink" asp-route-id="@Model.Post.PostID" title="@PopForums.Resources.Link"><span class="icon icon-link"></span></a></div>
				@if (user != null && Model.Topic != null && Model.Topic.IsClosed == false)
				{
					<div class="toolButton"><pf-commentbutton postid="@Model.Post.PostID" topicid="@Model.Topic.TopicID" buttontext="@PopForums.Resources.Reply" buttonclass="btn-link icon icon-reply-fill"></pf-commentbutton></div>
				}
				@if (user.IsPostEditable(Model.Post))
				{
					<div class="toolButton"><a asp-controller="Forum" asp-action="Edit" asp-route-id="@Model.Post.PostID" title="@PopForums.Resources.Edit"><span class="icon icon-pencil-square"></span></a></div>
				}
				@if (Model.Post.IsEdited && user != null && user.IsInRole(PermanentRoles.Moderator))
				{
					<div>
						<pf-postmoderationlogbutton buttonclass="btn-link" buttontext="@PopForums.Resources.ModerationLog" postid="@Model.Post.PostID" parentselectortoappendto=".superToolBox"></pf-postmoderationlogbutton>
					</div>
				}
				@if (Model.User.IsPostEditable(Model.Post))
				{
					@if (Model.Post.IsDeleted)
					{
						<div class="toolButton ms-auto">
							<form asp-action="UndeletePost" asp-controller="Moderator" asp-antiforgery="false" asp-route-id="@Model.Post.PostID" class="deletePostForm d-inline-block"><button type="submit" title="@PopForums.Resources.Undelete" class="btn-link"><span class="icon icon-recycle"></span></button></form>
						</div>
					}
					else
					{
						<div class="toolButton ms-auto">
							<form asp-action="DeletePost" asp-controller="Forum" asp-antiforgery="false" asp-route-id="@Model.Post.PostID" class="deletePostForm d-inline-block"><button type="submit" title="@deleteLink" class="btn-link"><span class="icon icon-trash3-fill"></span></button></form>
						</div>
					}
				}
			</div>
		</div>
		@if (Model.PostWithChildren.Children != null && Model.PostWithChildren.Children.Count > 0)
		{
			foreach (var comment in Model.PostWithChildren.Children)
			{
				<a name="@comment.PostID"></a>
				<div class="@if(comment.IsDeleted){<text>bg-warning</text>} card border-secondary mb-3 qaComment ms-3 p-3 @if (Model.PostWithChildren.LastReadTime.HasValue && comment.PostTime > Model.PostWithChildren.LastReadTime)
	{<text>newPostBlock</text>}" data-postID="@comment.PostID">
					<p class="text-muted">
						@Html.ActionLink(comment.Name, "ViewProfile", AccountController.Name, new { id = comment.UserID }, null) - <small><pf-formattedtime utctime="@comment.PostTime.ToString("o")"></pf-formattedtime>
						@if (user != null && user.IsInRole(PermanentRoles.Moderator))
						{<text> - IP: </text>@comment.IP}</small>
					</p>
					@Html.Raw(comment.FullText)
					@if (user.IsPostEditable(comment))
					{
						if (comment.IsDeleted)
						{
							<form asp-controller="Moderator" asp-action="UndeletePost" asp-route-id="@comment.PostID" method="post" class="ms-auto fs-5">
								<button type="submit" title="@PopForums.Resources.Undelete" class="btn-link icon icon-recycle text-decoration-none"></button>
							</form>
						}
						else
						{
							<form asp-controller="Forum" asp-action="DeletePost" asp-route-id="@comment.PostID" method="post" class="ms-auto fs-5">
								<button type="submit" title="@PopForums.Resources.Delete" class="btn-link icon icon-trash3-fill text-decoration-none"></button>
							</form>
						}
					}
				</div>
			}
			if (user != null && Model.PostWithChildren.Children.Count > 0 && !Model.Topic.IsClosed)
			{
				<p><pf-commentbutton postid="@Model.Post.PostID" topicid="@Model.Topic.TopicID" buttontext="@PopForums.Resources.Reply" buttonclass="btn btn-primary btn-sm"></pf-commentbutton></p>
			}
		}
		<div class="commentHolder"></div>
	</div>
</div>