@{
    Layout = null;
	var timeZones = PopForums.Models.DataCollections.TimeZones();
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>@PopForums.Resources.PopForumsAdmin</title>
	<script src="~/lib/vue/dist/vue.js"></script>
	<script src="~/lib/vue-router/dist/vue-router.min.js"></script>
	<script src="~/lib/popper.js/dist/popper.min.js"></script>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/axios/dist/axios.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
	<link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
	<style>
		.fade-enter-active, .fade-leave-active {
			transition: opacity .5s;
		}
		.fade-enter, .fade-leave-to {
			opacity: 0;
		}
	</style>
</head>
<body>
	<div class="container mb-3">
		<div id="app">
			<router-view></router-view>
		</div>
	</div>

<script type="x-templates" id="Top">
	<main>
		<div v-show="loading" class="spinner-border text-primary float-right ml-3 mt-1" role="status">
			<span class="sr-only">Loading...</span>
		</div>
		<div class="dropdown mb-3">
			<a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				@PopForums.Resources.PopForumsAdmin
			</a>
			<div class="dropdown-menu" aria-labelledby="dropdownMenuLink">
				<a class="dropdown-item" href="/Forums">@PopForums.Resources.ForumHome</a>
				<div class="dropdown-divider"></div>
				<router-link to="/general" class="dropdown-item">@PopForums.Resources.GeneralSettings</router-link>
				<router-link to="/categories" class="dropdown-item">@PopForums.Resources.Categories</router-link>
				<router-link to="/forums" class="dropdown-item">@PopForums.Resources.Forums</router-link>
				<router-link to="/forumpermissions" class="dropdown-item">@PopForums.Resources.ForumPermisions</router-link>
				<router-link to="/email" class="dropdown-item">@PopForums.Resources.Email</router-link>
				<router-link to="/search" class="dropdown-item">@PopForums.Resources.Search</router-link>
				<router-link to="/externallogins" class="dropdown-item">@PopForums.Resources.ExternalLogins</router-link>
				<div class="dropdown-divider"></div>
				<router-link to="/edituser" class="dropdown-item">@PopForums.Resources.EditUser</router-link>
				<router-link to="/userroles" class="dropdown-item">@PopForums.Resources.UserRoles</router-link>
				<router-link to="/userimageapproval" class="dropdown-item">@PopForums.Resources.UserImageApproval</router-link>
				<router-link to="/emailipban" class="dropdown-item">@PopForums.Resources.EmailIpBan</router-link>
				<router-link to="/emailusers" class="dropdown-item">@PopForums.Resources.EmailUsers</router-link>
				<div class="dropdown-divider"></div>
				<router-link to="/scoringgame" class="dropdown-item">@PopForums.Resources.ScoringGame</router-link>
				<router-link to="/eventdefinitions" class="dropdown-item">@PopForums.Resources.EventDefinitions</router-link>
				<router-link to="/awarddefinitions" class="dropdown-item">@PopForums.Resources.AwardDefinitions</router-link>
				<router-link to="/manualevent" class="dropdown-item">@PopForums.Resources.ManualEvent</router-link>
				<div class="dropdown-divider"></div>
				<a class="dropdown-item" asp-action="IPHistory">@PopForums.Resources.IpHistory</a>
				<a class="dropdown-item" asp-action="SecurityLog">@PopForums.Resources.SecurityLog</a>
				<a class="dropdown-item" asp-action="ModerationLog">@PopForums.Resources.ModerationLog</a>
				<a class="dropdown-item" asp-action="ErrorLog">@PopForums.Resources.ErrorLog</a>
				<a class="dropdown-item" asp-action="Services">@PopForums.Resources.Services</a>
			</div>
		</div>

		<router-view v-on:setLoading="setLoading($event)" v-bind:loading="loading"></router-view>
	</main>
</script>

<script type="x-templates" id="General">
	<main>
		<h2>@PopForums.Resources.GeneralSettings</h2>
		<div>
			<h3>@PopForums.Resources.ForumSettings</h3>
			<div class="form-group row">
				<label for="ForumTitle" class="col-sm-4 col-form-label">@PopForums.Resources.Title</label>
				<div class="col-sm-8"><input type="text" v-model="settings.forumTitle" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<label for="TopicsPerPage" class="col-sm-4 col-form-label">@PopForums.Resources.TopicsPerPage</label>
				<div class="col-sm-2"><input type="text" v-model="settings.topicsPerPage" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<label for="PostsPerPage" class="col-sm-4 col-form-label">@PopForums.Resources.PostsPerPage</label>
				<div class="col-sm-2"><input type="text" v-model="settings.postsPerPage" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<label for="SessionLength" class="col-sm-4 col-form-label">@PopForums.Resources.SessionLength</label>
				<div class="col-sm-2"><input type="text" v-model="settings.sessionLength" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<label for="MinimumSecondsBetweenPosts" class="col-sm-4 col-form-label">@PopForums.Resources.MinimumTimeBetweenPosts</label>
				<div class="col-sm-2"><input type="text" v-model="settings.minimumSecondsBetweenPosts" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="IsNewUserApproved"><input type="checkbox" v-model="settings.isNewUserApproved" id="IsNewUserApproved" /> @PopForums.Resources.NewUserApprovedWithoutVerification</label></div>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="IsNewUserImageApproved"><input type="checkbox" v-model="settings.isNewUserImageApproved" id="IsNewUserImageApproved" /> @PopForums.Resources.NewUserImageApprovedWithoutMod</label></div>
				</div>
			</div>
			<div class="form-group row">
				<label class="col-sm-4 col-form-label">@PopForums.Resources.UserImageMaxDim</label>
				<div class="col-sm-8 form-inline">
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.userImageMaxHeight" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">H</div>
						</div>
					</div>
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.userImageMaxWidth" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">W</div>
						</div>
					</div>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="input-group col-sm-8">
						<input type="text" v-model="settings.userImageMaxkBytes" class="form-control" placeholder="@PopForums.Resources.Size" />
						<div class="input-group-append">
							<div class="input-group-text">kB</div>
						</div>
					</div>
				</div>
			</div>
			<div class="form-group row">
				<label class="col-sm-4 control-label">@PopForums.Resources.UserAvatarMaxDim</label>
				<div class="col-sm-8 form-inline">
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.userAvatarMaxHeight" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">H</div>
						</div>
					</div>
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.userAvatarMaxWidth" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">W</div>
						</div>
					</div>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="input-group col-sm-8">
						<input type="text" v-model="settings.userAvatarMaxkBytes" class="form-control" placeholder="@PopForums.Resources.Size" />
						<div class="input-group-append">
							<div class="input-group-text">kB</div>
						</div>
					</div>
				</div>
			</div>
			<div class="form-group row">
				<label class="col-sm-4 control-label">YouTube</label>
				<div class="col-sm-8 form-inline">
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.youTubeHeight" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">H</div>
						</div>
					</div>
					<div class="input-group col-sm-4">
						<input type="text" v-model="settings.youTubeWidth" class="form-control" />
						<div class="input-group-append">
							<div class="input-group-text">W</div>
						</div>
					</div>
				</div>
			</div>

			<h3>@PopForums.Resources.Parsing</h3>

			<div class="form-group row">
				<label for="CensorWords" class="col-sm-4 col-form-label">@PopForums.Resources.CensorWords</label>
				<div class="col-sm-8"><textarea class="form-control" rows="3" v-model="settings.censorWords"></textarea></div>
			</div>
			<div class="form-group row">
				<label for="CensorCharacter" class="col-sm-4 col-form-label">@PopForums.Resources.Title</label>
				<div class="col-sm-3"><input type="text" v-model="settings.censorCharacter" class="form-control" /></div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="AllowImages"><input type="checkbox" v-model="settings.allowImages" id="AllowImages" /> @PopForums.Resources.AllowImages / YouTube</label></div>
				</div>
			</div>

			<h3>@PopForums.Resources.Logging</h3>

			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="LogSecurity"><input type="checkbox" v-model="settings.logSecurity" id="LogSecurity" /> @PopForums.Resources.LogSecurity</label></div>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="LogModeration"><input type="checkbox" v-model="settings.logModeration" id="LogModeration" /> @PopForums.Resources.LogMod</label></div>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="LogErrors"><input type="checkbox" v-model="settings.logErrors" id="LogErrors" /> @PopForums.Resources.LogErrors</label></div>
				</div>
			</div>

			<h3>@PopForums.Resources.ServerTime</h3>

			<div class="form-group row">
				<label for="ServerTimeZone" class="col-sm-4 col-form-label">@PopForums.Resources.TimeZone</label>
				<div class="col-sm-8">
					<select id="ServerTimeZone" v-model="settings.serverTimeZone" class="form-control">
						@foreach (var i in timeZones)
						{
							<option value="@i.Key">@i.Value</option>}
					</select>
				</div>
			</div>
			<div class="form-group row">
				<div class="col-sm-8 offset-sm-4">
					<div class="checkbox"><label for="ServerDaylightSaving"><input type="checkbox" v-model="settings.serverDaylightSaving" id="ServerDaylightSaving" /> @PopForums.Resources.UseDaylight</label></div>
				</div>
			</div>

			<h3>@PopForums.Resources.TermsOfService</h3>

			<div class="form-group row">
				<div class="col-sm-12"><textarea class="form-control" rows="6" v-model="settings.termsOfService"></textarea></div>
			</div>

			<input type="button" v-on:click="save" :disabled="loading" value="@PopForums.Resources.Save" class="btn btn-primary" />
			<transition name="fade"><span v-show="alert" class="alert alert-success">{{message}}</span></transition>

		</div>
	</main>
</script>

<script type="x-templates" id="Categories">
	<main>
		<h2>@PopForums.Resources.Categories</h2>
		<div class="form-inline">
			<input type="text" v-model="newCategory" class="form-control mb-3" />
			<input type="button" v-on:click="saveNew" :disabled="loading" value="@PopForums.Resources.AddNew" class="btn btn-primary ml-3 mb-3" />
		</div>
		<table class="table table-hover table-sm mt-3">
			<thead>
				<tr>
					<th colspan="2">@PopForums.Resources.Move</th>
					<th>@PopForums.Resources.Category</th>
					<th>&nbsp;</th>
				</tr>
			</thead>
			<tbody>
				<tr v-for="(category, index) in categories">
					<td class="text-right"><input type="button" value="@PopForums.Resources.Up" class="btn btn-secondary ml-3" v-on:click="up(category)" v-if="index != 0" style="width:5em;" /></td>
					<td class="text-left"><input type="button" value="@PopForums.Resources.Down" class="btn btn-secondary ml-3" v-on:click="down(category)" v-if="index != categories.length-1" style="width:5em;" /></td>
					<td>{{category.title}}</td>
					<td class="text-nowrap text-right">
						<input type="button" value="@PopForums.Resources.Edit" class="btn btn-primary ml-3" v-on:click="editCat(category)" />
						<input type="button" value="@PopForums.Resources.Delete" class="btn btn-primary ml-3" v-on:click="deleteCat(category)" />
					</td>
				</tr>
			</tbody>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">@PopForums.Resources.Edit</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<input type="text" v-model="editCategory" class="form-control" />
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="saveCat">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script type="x-templates" id="Forums">
	<main>
		<h2>@PopForums.Resources.Forums</h2>

		<p><input type="button" class="btn btn-primary" v-on:click="newForum" value="@PopForums.Resources.AddForum" /></p>

		<table class="table table-hover table-sm mt-3">
			<thead>
				<tr>
					<th colspan="2">@PopForums.Resources.Move</th>
					<th>@PopForums.Resources.Forum</th>
					<th>@PopForums.Resources.Visible</th>
					<th>@PopForums.Resources.Archived</th>
					<th>Q&amp;A</th>
					<th>&nbsp;</th>
				</tr>
			</thead>
			<tbody>
				<template v-for="category in categories">
					<tr class="bg-primary text-white"><td colspan="7">{{category.category.title}}</td></tr>
					<tr v-for="(forum, index) in category.forums">
						<td class="text-right"><input type="button" value="@PopForums.Resources.Up" class="btn btn-secondary ml-3" v-on:click="up(forum)" v-if="index != 0" style="width:5em;" /></td>
						<td class="text-left"><input type="button" value="@PopForums.Resources.Down" class="btn btn-secondary ml-3" v-on:click="down(forum)" v-if="index != category.forums.length-1" style="width:5em;" /></td>
						<td>{{forum.title}}</td>
						<td><input type="checkbox" v-model="forum.isVisible" disabled /></td>
						<td><input type="checkbox" v-model="forum.isArchived" disabled /></td>
						<td><input type="checkbox" v-model="forum.isQAForum" disabled /></td>
						<td><input type="button" value="@PopForums.Resources.Edit" class="btn btn-primary ml-3" v-on:click="editForum(forum)" /></td>
					</tr>
				</template>
			</tbody>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">@PopForums.Resources.Edit</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group row">
							<label for="title" class="col-sm-2 col-form-label">@PopForums.Resources.Title</label>
							<div class="col-sm-10"><input type="text" v-model="editingForum.title" class="form-control" id="title" /></div>
						</div>
						<div class="form-group row">
							<label for="description" class="col-sm-2 col-form-label">@PopForums.Resources.Description</label>
							<div class="col-sm-10"><input type="text" v-model="editingForum.description" class="form-control" id="description" /></div>
						</div>
						<div class="form-group row">
							<label for="categoryID" class="col-sm-2 col-form-label">@PopForums.Resources.Category</label>
							<div class="col-sm-10">
								<select id="categoryID" v-model="editingForum.categoryID" class="form-control">
									<option v-for="c in categories" v-bind:value="c.category.categoryID">{{c.category.title}}</option>
								</select>
							</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-10 offset-sm-2">
								<div class="checkbox"><label for="IsVisible"><input type="checkbox" v-model="editingForum.isVisible" id="IsVisible" /> @PopForums.Resources.Visible</label></div>
							</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-10 offset-sm-2">
								<div class="checkbox"><label for="IsArchived"><input type="checkbox" v-model="editingForum.isArchived" id="IsArchived" /> @PopForums.Resources.Archived</label></div>
							</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-10 offset-sm-2">
								<div class="checkbox"><label for="IsQAForum"><input type="checkbox" v-model="editingForum.isQAForum" id="IsQAForum" /> Q&amp;A @PopForums.Resources.Forum</label></div>
							</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-12">
								<label for="forumAdapterName" class="col-form-label">@PopForums.Resources.ForumAdapter</label>
							</div>
						</div>
						<div class="form-group row">
							<div class="col-sm-12"><input type="text" v-model="editingForum.forumAdapterName" class="form-control" id="forumAdapterName" /></div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="saveForum">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script type="x-templates" id="ForumPermissions">
	<main>
		<h2>@PopForums.Resources.ForumPermisions</h2>

		<div class="form-group">
			<label>@PopForums.Resources.Forum</label>
			<select id="ForumSelect" class="form-control" v-model="selectedForum" v-on:change="forumChange">
				<optgroup v-for="c in categories" v-bind:label="c.category.title">
					<option v-for="f in c.forums" v-bind:value="f.forumID">{{f.title}}</option>
				</optgroup>
			</select>
		</div>

		<div class="container-fluid">
			<div class="row">
				<div class="col-3">@PopForums.Resources.PostingRoles</div>
				<div class="offset-5 col-3">@PopForums.Resources.ViewingRoles</div>
			</div>
			<div class="row">
				<div class="col-3"><select size="6" class="form-control" v-model="selectedPost"><option v-for="r in postRoles">{{r}}</option></select></div>
				<div class="col-1">
					<input type="button" value="&lt;&lt;" class="btn-sm btn-primary mb-3" v-on:click="modify('addPost', selectedAll)" /><br />
					<input type="button" value="&gt;&gt;" class="btn-sm btn-primary" v-on:click="modify('removePost', selectedPost)" />
				</div>
				<div class="col-3"><select size="6" class="form-control" v-model="selectedAll"><option v-for="r in allRoles">{{r}}</option></select></div>
				<div class="col-1">
					<input type="button" value="&gt;&gt;" class="btn-sm btn-primary mb-3" v-on:click="modify('addView', selectedAll)" /><br />
					<input type="button" value="&lt;&lt;" class="btn-sm btn-primary" v-on:click="modify('removeView', selectedView)" />
				</div>
				<div class="col-3"><select size="6" class="form-control" v-model="selectedView"><option v-for="r in viewRoles">{{r}}</option></select></div>
			</div>
			<div class="row">
				<div class="col-3"><input type="button" value="@PopForums.Resources.RemoveAll" class="btn btn-primary mt-3" v-on:click="modify('removeAllPost', null)" /></div>
				<div class="offset-5 col-3"><input type="button" value="@PopForums.Resources.RemoveAll" class="btn btn-primary mt-3" v-on:click="modify('removeAllView', null)" /></div>
			</div>
		</div>

		<p>@PopForums.Resources.ForumPermissionInstructions</p>
	</main>
</script>

<script type="x-templates" id="Email">
	<main>
		<h2>@PopForums.Resources.Email</h2>

		<div class="form-group row">
			<label for="SmtpServer" class="col-sm-4 col-form-label">@PopForums.Resources.SmtpServer</label>
			<div class="col-sm-8"><input type="text" v-model="settings.smtpServer" id="SmtpServer" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label for="SmtpPort" class="col-sm-4 col-form-label">@PopForums.Resources.SmtpPort</label>
			<div class="col-sm-3"><input type="text" v-model="settings.smtpPort" id="SmtpPort" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label for="MailerAddress" class="col-sm-4 col-form-label">@PopForums.Resources.FromEmailAddress</label>
			<div class="col-sm-8"><input type="text" v-model="settings.mailerAddress" id="MailerAddress" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<div class="col-sm-8 offset-sm-4">
				<div class="checkbox"><label for="UseSslSmtp"><input type="checkbox" v-model="settings.useSslSmtp" id="UseSslSmtp" /> @PopForums.Resources.UseSsl</label></div>
			</div>
		</div>
		<div class="form-group row">
			<div class="col-sm-8 offset-sm-4">
				<div class="checkbox"><label for="UseEsmtp"><input type="checkbox" v-model="settings.useEsmtp" id="UseEsmtp" /> @PopForums.Resources.UseEsmtpCred</label></div>
			</div>
		</div>
		<div class="form-group row">
			<label for="SmtpUser" class="col-sm-4 col-form-label">@PopForums.Resources.SmtpUser</label>
			<div class="col-sm-8"><input type="text" v-model="settings.smtpUser" id="SmtpUser" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label for="SmtpPassword" class="col-sm-4 col-form-label">@PopForums.Resources.SmtpPassword</label>
			<div class="col-sm-8"><input type="text" v-model="settings.smtpPassword" id="SmtpPassword" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label for="MailSendingInverval" class="col-sm-4 col-form-label">@PopForums.Resources.SendingInterval</label>
			<div class="col-sm-3"><input type="text" v-model="settings.mailSendingInverval" id="MailSendingInverval" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label for="MailerQuantity" class="col-sm-4 col-form-label">Mailer quantity</label>
			<div class="col-sm-3"><input type="text" v-model="settings.mailerQuantity" id="MailerQuantity" class="form-control" /></div>
		</div>
		<div class="form-group row">
			<label class="col-sm-4 col-form-label">@PopForums.Resources.Signature</label>
			<div class="col-sm-8">
				<textarea v-model="settings.mailSignature" class="form-control" rows="4"></textarea>
			</div>
		</div>

		<input type="button" v-on:click="save" :disabled="loading" value="@PopForums.Resources.Save" class="btn btn-primary" />
		<transition name="fade"><span v-show="alert" class="alert alert-success">{{message}}</span></transition>

	</main>
</script>

<script type="x-templates" id="Search">
	<main>
		<h2>@PopForums.Resources.Search</h2>

		<div class="form-group row">
			<label for="SearchIndexingInterval" class="col-sm-4 col-form-label">@PopForums.Resources.Millseconds</label>
			<div class="col-sm-8"><input type="text" v-model="settings.searchIndexingInterval" id="SearchIndexingInterval" class="form-control" /></div>
		</div>
		<input type="button" v-on:click="save" :disabled="loading" value="@PopForums.Resources.Save" class="btn btn-primary" />
		<transition name="fade"><span v-show="alert" class="alert alert-success">{{message}}</span></transition>

		<h3 class="mt-3">@PopForums.Resources.JunkWords</h3>
		<div class="form-group row">
			<div class="col-sm-8"><input type="text" v-model="newWord" class="form-control" /></div>
			<div class="col-sm-3"><input type="button" v-on:click="createWord" value="@PopForums.Resources.CreateJunkWordButton" class="btn btn-primary" /></div>
		</div>
		<div class="form-group row">
			<select size="10" class="form-control" v-model="selectedWord">
				<option v-for="w in junkWords">{{w}}</option>
			</select>
		</div>
		<input type="button" v-on:click="deleteWord" value="@PopForums.Resources.DeleteJunkWordButton" class="btn btn-primary" />
	</main>
</script>

<script type="x-templates" id="ExternalLogins">
	<main>
		<h2>@PopForums.Resources.ExternalLogins</h2>

		<p>@PopForums.Resources.AppRestartRequired</p>

		<table class="table">
			<tr>
				<th>Google</th>
				<td><input type="checkbox" v-model="settings.useGoogleLogin" /> (registered redirect URI is http://yourdomain/signin-google)</td>
			</tr>
			<tr>
				<td>ClientId:</td>
				<td><input type="text" v-model="settings.googleClientId" class="form-control" /></td>
			</tr>
			<tr>
				<td>ClientSecret:</td>
				<td><input type="text" v-model="settings.googleClientSecret" class="form-control" /></td>
			</tr>
			<tr>
				<th>Facebook</th>
				<td><input type="checkbox" v-model="settings.useFacebookLogin" /></td>
			</tr>
			<tr>
				<td>AppID:</td>
				<td><input type="text" v-model="settings.facebookAppID" class="form-control" /></td>
			</tr>
			<tr>
				<td>AppSecret:</td>
				<td><input type="text" v-model="settings.facebookAppSecret" class="form-control" /></td>
			</tr>
			<tr>
				<th>Twitter</th>
				<td><input type="checkbox" v-model="settings.useTwitterLogin" /></td>
			</tr>
			<tr>
				<td>ConsumerKey:</td>
				<td><input type="text" v-model="settings.twitterConsumerKey" class="form-control" /></td>
			</tr>
			<tr>
				<td>ConsumerSecret:</td>
				<td><input type="text" v-model="settings.twitterConsumerSecret" class="form-control" /></td>
			</tr>
			<tr>
				<th>Microsoft</th>
				<td><input type="checkbox" v-model="settings.useMicrosoftLogin" /></td>
			</tr>
			<tr>
				<td>ClientID:</td>
				<td><input type="text" v-model="settings.microsoftClientID" class="form-control" /></td>
			</tr>
			<tr>
				<td>ClientSecret:</td>
				<td><input type="text" v-model="settings.microsoftClientSecret" class="form-control" /></td>
			</tr>
		</table>


		<input type="button" v-on:click="save" :disabled="loading" value="@PopForums.Resources.Save" class="btn btn-primary" />
		<transition name="fade"><span v-show="alert" class="alert alert-success">{{message}}</span></transition>
	</main>
</script>

<script type="x-templates" id="EditUser">
	<main>
		<h2>@PopForums.Resources.EditUser</h2>

		<div class="form-group row">
			<div class="col-sm-8"><input type="text" v-model="searchText" class="form-control" /></div>
			<div class="col-sm-3"><input type="button" v-on:click="search" value="@PopForums.Resources.Search" class="btn btn-primary" /></div>
		</div>
		<div class="form-check form-check-inline mb-3">
			<input class="form-check-input" type="radio" value="name" id="SearchName" v-model="searchType">
			<label class="form-check-label" for="SearchName">Name</label>
		</div>
		<div class="form-check form-check-inline">
			<input class="form-check-input" type="radio" value="email" id="SearchEmail" v-model="searchType">
			<label class="form-check-label" for="SearchEmail">Email</label>
		</div>
		<div class="form-check form-check-inline">
			<input class="form-check-input" type="radio" value="role" id="SearchRole" v-model="searchType">
			<label class="form-check-label" for="SearchRole">Role</label>
		</div>
		<transition name="fade"><span v-show="searchAlert" class="alert alert-warning">@PopForums.Resources.NoResults</span></transition>
		<div v-for="u in searchResults"><router-link :to="{path:'/edituser/'+u.userID}">{{u.name}}</router-link> - {{u.email}}</div>
	</main>
</script>

<script type="x-templates" id="EditUserDetail">
	<main>
		<h2>@PopForums.Resources.EditUser</h2>
	</main>
</script>

<script type="x-templates" id="UserRoles">
	<main>
		<h2>@PopForums.Resources.UserRoles</h2>
		
		<div class="form-group row">
			<div class="col-sm-8"><input type="text" v-model="newRole" class="form-control" /></div>
			<div class="col-sm-3"><input type="button" value="@PopForums.Resources.CreateNewRole" v-on:click="createRole" class="btn btn-primary" :disabled="loading" /></div>
		</div>
		
		<div class="form-group">
			<select size="6" class="form-control" v-model="selectedAll">
				<option v-for="r in roles">{{r}}</option>
			</select>
		</div>
		<p><input type="submit" value="@PopForums.Resources.DeleteSelectedRole" v-on:click="deleteRole" :disabled="loading" class="btn btn-primary" /></p>

		<p>@PopForums.Resources.PermRoles</p>
	</main>
</script>

<script type="x-templates" id="UserImageApproval">
	<main>
		<h2>@PopForums.Resources.UserImageApproval</h2>
		
		<div v-if="isNewUserImageApproved"><p class="alert alert-warning">@PopForums.Resources.UserImageApprovalNotReq</p></div>
		
		<div v-for="i in unapproved">
			<p>
				{{i.user.name}} - <a v-bind:href="'mailto:' + i.user.email">{{i.user.email}}</a>
				<img v-bind:src="'/Forums/Image/UserImage/' + i.userImage.userImageID" />
			</p>
			<p>
				<input type="button" value="Approve" class="btn btn-primary mr-3" v-on:click="approveImage(i.userImage.userImageID)" />
				<input type="button" value="@PopForums.Resources.Delete" class="btn btn-primary" v-on:click="deleteImage(i.userImage.userImageID)" />
			</p>
			<hr />
		</div>
	</main>
</script>

<script type="x-templates" id="EmailIpBan">
	<main>
		<h2>@PopForums.Resources.EmailIpBan</h2>

		<h3>@PopForums.Resources.EmailBan</h3>

		<div class="form-group row">
			<div class="col-sm-8"><input type="text" v-model="newEmail" class="form-control" /></div>
			<div class="col-sm-3"><input type="button" value="@PopForums.Resources.Ban" v-on:click="banEmail" class="btn btn-primary" :disabled="loading" /></div>
		</div>

		<div class="form-group">
			<select size="6" class="form-control" v-model="selectedEmail">
				<option v-for="e in emails">{{e}}</option>
			</select>
		</div>
		<p><input type="submit" value="@PopForums.Resources.BanRemove" v-on:click="removeEmail" :disabled="loading" class="btn btn-primary" /></p>

		<h3>@PopForums.Resources.IpBan</h3>

		<div class="form-group row">
			<div class="col-sm-8"><input type="text" v-model="newIP" class="form-control" /></div>
			<div class="col-sm-3"><input type="button" value="@PopForums.Resources.Ban" v-on:click="banIP" class="btn btn-primary" :disabled="loading" /></div>
		</div>

		<div class="form-group">
			<select size="6" class="form-control" v-model="selectedIP">
				<option v-for="i in ips">{{i}}</option>
			</select>
		</div>
		<p><input type="submit" value="@PopForums.Resources.BanRemove" v-on:click="removeIP" :disabled="loading" class="btn btn-primary" /></p>


	</main>
</script>

<script type="x-templates" id="EmailUsers">
	<main>
		<h2>@PopForums.Resources.EmailUsers</h2>

		<div class="form-group">
			<label>@PopForums.Resources.Subject</label>
			<input type="text" class="form-control" v-model="subject" />
		</div>
		<div class="form-group">
			<label>@PopForums.Resources.Body</label>
			<textarea class="form-control" rows="10" v-model="body"></textarea>
		</div>
		<div class="form-group">
			<label>@PopForums.Resources.BodyHtml @PopForums.Resources.Optional</label>
			<textarea class="form-control" rows="10" v-model="htmlBody"></textarea>
		</div>
		<input type="button" value="@PopForums.Resources.Send" v-on:click="sendMail" class="btn btn-primary mr-3" />
		<span v-if="isErrorVisible" class="alert alert-warning">{{errorMessage}}</span>
		<transition name="fade"><span v-if="isSuccess" class="alert alert-success">@PopForums.Resources.EmailUsersQueued</span></transition>
</main>
</script>

<script type="x-templates" id="ScoringGame">
	<main>
		<h2>@PopForums.Resources.ScoringGame</h2>

		<div class="form-group">
			<label>Interval (@PopForums.Resources.Millseconds)</label>
			<input type="text" v-model="settings.scoringGameCalculatorInterval" class="form-control" />
		</div>
		<input type="button" v-on:click="save" :disabled="loading" value="@PopForums.Resources.Save" class="btn btn-primary" />
		<transition name="fade"><span v-show="alert" class="alert alert-success">{{message}}</span></transition>
	</main>
</script>

<script type="x-templates" id="EventDefinitions">
	<main>
		<h2>@PopForums.Resources.EventDefinitions</h2>

		<p><input type="button" class="btn btn-primary" v-on:click="openNewEvent" value="Add Event" /></p>

		<table class="table table-hover">
			<tr>
				<th>ID</th>
				<th>@PopForums.Resources.Description</th>
				<th>Point Value</th>
				<th>Publish to Feed</th>
				<th>&nbsp;</th>
			</tr>
			<tr v-for="e in allEvents">
				<td>{{e.eventDefinitionID}}</td>
				<td>{{e.description}}</td>
				<td>{{e.pointValue}}</td>
				<td><input type="checkbox" disabled="disabled" v-model="e.isPublishedToFeed" /></td>
				<td>
					<input type="button" value="Delete" class="btn btn-primary" v-show="!staticIDs.includes(e.eventDefinitionID)" v-on:click="deleteEvent(e)" :disabled="loading" />
				</td>
			</tr>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Add Event</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group row">
							<label for="EventDefinitionID" class="col-sm-5 col-form-label">EventDefinitionID</label>
							<div class="col-sm-7"><input type="text" v-model="newEvent.eventDefinitionID" class="form-control" id="EventDefinitionID" /></div>
						</div>
						<div class="form-group row">
							<label for="description" class="col-sm-5 col-form-label">@PopForums.Resources.Description</label>
							<div class="col-sm-7"><input type="text" v-model="newEvent.description" class="form-control" id="description" /></div>
						</div>
						<div class="form-group row">
							<label for="pointValue" class="col-sm-5 col-form-label"> Point Value</label>
							<div class="col-sm-7"><input type="text" v-model="newEvent.pointValue" class="form-control" id="pointValue" /></div>
						</div>
						<div class="form-group row">
							<div class="col-sm-7 offset-sm-5">
								<div class="checkbox"><label for="ispub"><input type="checkbox" v-model="newEvent.isPublishedToFeed" id="ispub" /> Publish to Feed</label></div>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="createEvent" :disabled="loading">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script type="x-templates" id="AwardDefinitions">
	<main>
		<h2>@PopForums.Resources.AwardDefinitions</h2>

		<p><input type="button" class="btn btn-primary" v-on:click="openNewAward" value="Add Award" /></p>

		<table class="table table-hover">
			<tr>
				<th>ID</th>
				<th>@PopForums.Resources.Title</th>
				<th>@PopForums.Resources.Description</th>
				<th>Single-time Award</th>
				<th>&nbsp;</th>
			</tr>
			<tr v-for="a in allAwards">
				<td><router-link :to="{path:'/awarddefinitions/'+a.awardDefinitionID}">{{a.awardDefinitionID}}</router-link></td>
				<td>{{a.title}}</td>
				<td>{{a.description}}</td>
				<td><input type="checkbox" disabled="disabled" v-model="a.isSingleTimeAward" /></td>
				<td>
					<input type="button" value="Delete" class="btn btn-primary" v-on:click="deleteAward(a)" :disabled="loading" />
				</td>
			</tr>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Add Award</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group row">
							<label for="awardid" class="col-sm-5 col-form-label">AwardDefinitionID</label>
							<div class="col-sm-7"><input type="text" v-model="newAward.awardDefinitionID" class="form-control" id="awardid" /></div>
						</div>
						<div class="form-group row">
							<label for="title" class="col-sm-5 col-form-label">@PopForums.Resources.Title</label>
							<div class="col-sm-7"><input type="text" v-model="newAward.title" class="form-control" id="title" /></div>
						</div>
						<div class="form-group row">
							<label for="description" class="col-sm-5 col-form-label">@PopForums.Resources.Description</label>
							<div class="col-sm-7"><input type="text" v-model="newAward.description" class="form-control" id="description" /></div>
						</div>
						<div class="form-group row">
							<div class="col-sm-7 offset-sm-5">
								<div class="checkbox"><label for="issingle"><input type="checkbox" v-model="newAward.isSingleTimeAward" id="issingle" /> Single-time Award</label></div>
							</div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="createAward" :disabled="loading">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script type="x-templates" id="AwardDefinitionDetail">
	<main>
		<h2>Award Detail</h2>

		<table class="table">
			<tr>
				<td>Award Definition ID</td>
				<td>{{award.awardDefinitionID}}</td>
			</tr>
			<tr>
				<td>Title</td>
				<td>{{award.title}}</td>
			</tr>
			<tr>
				<td>Description</td>
				<td>{{award.description}}</td>
			</tr>
			<tr>
				<td>Single-time award</td>
				<td><input type="checkbox" disabled="disabled" v-model="award.isSingleTimeAward" /></td>
			</tr>
		</table>

		<h3>Conditions</h3>
		<p><input type="button" class="btn btn-primary" v-on:click="openNewCondition" value="Add Condition" /></p>
		<table class="table">
			<tr>
				<th>EventDefinitionID</th>
				<th>Event Count</th>
				<th>&nbsp;</th>
			</tr>
			<tr v-for="c in conditions">
				<td>{{c.eventDefinitionID}}</td>
				<td>{{c.eventCount}}</td>
				<td><input type="button" v-on:click="deleteCondition(c)" value="@PopForums.Resources.Delete" class="btn btn-primary" :disabled="loading" /></td>
			</tr>
		</table>
		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">Add Award</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div class="form-group row">
							<label for="evid" class="col-sm-5 col-form-label">EventDefinitionID</label>
							<div class="col-sm-7">
								<select v-model="newCondition.eventDefinitionID" class="form-control" id="evid">
									<option v-for="e in allEvents">{{e.eventDefinitionID}}</option>
								</select>
							</div>
						</div>
						<div class="form-group row">
							<label for="newcount" class="col-sm-5 col-form-label">Event Count</label>
							<div class="col-sm-7"><input type="text" v-model="newCondition.eventCount" class="form-control" id="newcount" /></div>
						</div>
					</div>
					<div class="modal-footer">
						<button type="button" class="btn btn-primary" v-on:click="createCondition" :disabled="loading">@PopForums.Resources.Save</button>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script type="x-templates" id="ManualEvent">
	<main>
		<h2>@PopForums.Resources.ManualEvent</h2>

		<div class="form-group">
			<label><input type="button" class="btn btn-primary" value="@PopForums.Resources.To" v-on:click="openSearch" /></label>
			<input type="text" disabled v-model="selectedUser.name" class="form-control" />
		</div>
		<div class="form-group">
			<label>Feed Message</label>
			<input type="text" v-model="message" class="form-control" />
		</div>
		<hr />
		<div class="form-group">
			<label>Points</label>
			<input type="text" v-model="points" class="form-control" />
		</div>
		<input type="button" class="btn btn-primary" value="Publish Points" v-on:click="createManualEvent" />
		<hr />
		<div class="form-group">
			<label>Event Definition ID</label>
			<select class="form-control" v-model="eventDefinitionID">
				<option v-for="e in allEvents">{{e.eventDefinitionID}}</option>
			</select>
		</div>
		<input type="button" class="btn btn-primary" value="Publish Existing Event" v-on:click="createExistingManualEvent" />

		<div class="modal" tabindex="-1" role="dialog" ref="modal">
			<div class="modal-dialog" role="document">
				<div class="modal-content">
					<div class="modal-header">
						<h5 class="modal-title">@PopForums.Resources.To</h5>
						<button type="button" class="close" data-dismiss="modal" aria-label="Close">
							<span aria-hidden="true">&times;</span>
						</button>
					</div>
					<div class="modal-body">
						<div><input type="text" class="form-control" v-model="searchName" v-on:keyup="updateList" placeholder="@PopForums.Resources.Search" /></div>
						<div class="mt-3">
							<select size="6" v-model="selectedUser" class="form-control" v-on:change="chooseUser">
								<option v-for="u in searchResults" v-bind:value="u">{{u.name}}</option>
							</select>
						</div>
					</div>
				</div>
			</div>
		</div>
	</main>
</script>

<script>
	const basePath = "/Forums/AdminApi/";

	const Top = {
		template: "#Top",
		data() {
			return {
				loading: true
			}
		},
		mounted: function() {

		},
		methods: {
			setLoading: function(isLoading) {
				this.loading = isLoading;
			}
		}
	}

	var loadingMixin = {
		data() {
			return {
				alert: false,
				message: ""
			}
		},
		props: {
			loading: Boolean
		},
		beforeMount: function () {
			this.$emit("setLoading", true);
		},
		mounted: function () {
			this.$emit("setLoading", false);
		},
		methods: {
			startLoad: function() {
				this.$emit("setLoading", true);
			},
			endLoad: function(message) {
				this.$emit("setLoading", false);
				if (message) {
					this.alert = true;
					this.message = message;
					var c = this;
					setTimeout(function() { c.alert = false; }, 5000);
				}
			}
		}
	}
	var settingsMixin = {
		data() {
			return {
				settings: {}
			}
		},
		created: function () {
			axios.get(basePath + "GetSettings").then(response => {
				this.settings = response.data;
			});
		},
		methods: {
			save: function () {
				this.startLoad();
				axios.post(basePath + "SaveSettings", this.settings).then(response => {
					this.settings = response.data;
					this.endLoad("@PopForums.Resources.SettingsSaved");
				});
			}
		}

	}

	const General = {
		mixins: [settingsMixin,loadingMixin],
		template: "#General"
	}

	const Categories = {
		mixins: [loadingMixin],
		template: "#Categories",
		data() {
			return {
				categories: [],
				newCategory: "",
				editCategory: "",
				editID: 0
			}
		},
		created: function () {
			axios.get(basePath + "GetCategories").then(response => (this.categories = response.data));
		},
		methods: {
			saveNew: function () {
				this.startLoad();
				axios.post(basePath + "AddCategory", { title: this.newCategory }).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
				this.newCategory = "";
			},
			deleteCat: function(item) {
				this.startLoad();
				axios.post(basePath + "DeleteCategory/" + item.categoryID).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
			},
			up: function(item) {
				this.startLoad();
				axios.post(basePath + "MoveCategoryUp/" + item.categoryID).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
			},
			down: function(item) {
				this.startLoad();
				axios.post(basePath + "MoveCategoryDown/" + item.categoryID).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
			},
			editCat: function (item) {
				this.editCategory = item.title;
				this.editID = item.categoryID;
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			saveCat: function() {
				this.startLoad();
				axios.post(basePath + "EditCategory", { categoryID: this.editID, title: this.editCategory })
					.then(response => {
						this.categories = response.data;
						const e = this.$refs.modal;
						$(e).modal("hide");
						this.endLoad();
					});
			}
		}
	}

	const Forums = {
		mixins: [loadingMixin],
		template: "#Forums",
		data() {
			return {
				categories: [],
				editingForum: null
			}
		},
		created: function() {
			axios.get(basePath + "GetForums").then(response => (this.categories = response.data));
			this.resetForum();
		},
		methods: {
			up: function(forum) {
				this.startLoad();
				axios.post(basePath + "MoveForumUp/" + forum.forumID).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
			},
			down: function(forum) {
				this.startLoad();
				axios.post(basePath + "MoveForumDown/" + forum.forumID).then(response => {
					this.categories = response.data;
					this.endLoad();
				});
			},
			editForum: function (forum) {
				this.editingForum = forum;
				if (!this.editingForum.categoryID)
					this.editingForum.categoryID = 0;
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			resetForum: function() {
				this.editingForum = {forumID: 0, title:"", description: "", categoryID: 0, isVisible: true, isArchived: false, isQAForum: false, forumAdapterName: null};
			},
			newForum: function() {
				this.resetForum();
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			saveForum: function() {
				this.startLoad();
				axios.post(basePath + "SaveForum", this.editingForum)
					.then(response => {
						this.categories = response.data;
						const e = this.$refs.modal;
						$(e).modal("hide");
						this.endLoad();
					});
			}
		}
	}

	const ForumPermissions = {
		mixins: [loadingMixin],
		template: "#ForumPermissions",
		data() {
			return {
				categories: [],
				selectedForum: null,
				allRoles: [],
				postRoles: [],
				viewRoles: [],
				selectedAll: null,
				selectedPost: null,
				selectedView: null
			}
		},
		created: function() {
			axios.get(basePath + "GetForums").then(response => (this.categories = response.data));
			this.updatePerm();
		},
		methods: {
			forumChange: function() {
				this.updatePerm();
			},
			updatePerm: function() {
				if (this.selectedForum) {
					this.startLoad();
					axios.get(basePath + "GetForumPermissions/" + this.selectedForum).then(response => {
						this.allRoles = response.data.allRoles;
						this.viewRoles = response.data.viewRoles;
						this.postRoles = response.data.postRoles;
						this.endLoad();
					});
				}
			},
			modify: function (modifyType, role) {
				this.startLoad();
				axios.post(basePath + "ModifyForumRoles", {forumID: this.selectedForum, modifyType: modifyType, role: role}).then(response => {
					this.endLoad();
					this.updatePerm();
				});
			}
		}
	}

	const Email = {
		mixins: [settingsMixin,loadingMixin],
		template: "#Email"
	}

	const Search = {
		mixins: [settingsMixin,loadingMixin],
		template: "#Search",
		data() {
			return {
				junkWords: [],
				selectedWord: null,
				newWord: ""
			}
		},
		created: function() {
			this.updateJunk();
		},
		methods: {
			updateJunk: function () {
				this.startLoad();
				axios.get(basePath + "GetJunkWords").then(response => {
					this.junkWords = response.data;
					this.endLoad();
				});
			},
			createWord: function() {
				this.startLoad();
				axios.post(basePath + "CreateJunkWord/" + this.newWord).then(response => {
					this.endLoad();
					this.newWord = "";
					this.updateJunk();
				});
			},
			deleteWord: function() {
				this.startLoad();
				axios.post(basePath + "DeleteJunkWord/" + this.selectedWord).then(response => {
					this.endLoad();
					this.updateJunk();
				});
			}
		}
	}

	const ExternalLogins = {
		mixins: [settingsMixin,loadingMixin],
		template: "#ExternalLogins"
	}

	const EditUser = {
		mixins: [loadingMixin],
		template: "#EditUser",
		data() {
			return {
				searchResults: [],
				searchText: "",
				searchType: "name",
				searchAlert: false
			}
		},
		methods: {
			search: function() {
				this.startLoad();
				axios.post(basePath + "EditUserSearch", { searchType: this.searchType, searchText: this.searchText })
					.then(response => {
						this.searchResults = response.data;
						this.endLoad();
						if (this.searchResults.length === 0)
							this.searchAlert = true;
						else
							this.searchAlert = false;
					});
			}
		}
	}

	const EditUserDetail = {
		mixins: [loadingMixin],
		template: "#EditUserDetail",
		data() {
			return {
				user: null
			}
		},
		created: function () {
			var u = basePath + "GetUser/" + this.$route.params.id;
			axios.get(u).then(response => {
				this.user = response.data;
			});
		},
		methods: {
		}
	}

	const UserRoles = {
		mixins: [loadingMixin],
		template: "#UserRoles",
		data() {
			return {
				roles: [],
				newRole: "",
				selectedAll: null
			}
		},
		created: function () {
			this.refreshRoles();
		},
		methods: {
			refreshRoles: function() {
				this.startLoad();
				axios.get(basePath + "GetAllRoles").then(response => {
					this.roles = response.data;
					this.endLoad();
				});
			},
			createRole: function () {
				if (this.newRole && this.newRole != "") {
					this.startLoad();
					axios.post(basePath + "CreateRole/" + this.newRole).then(response => {
						this.endLoad();
						this.refreshRoles();
						this.newRole = "";
					});
				}
			},
			deleteRole: function() {
				if (this.selectedAll) {
					this.startLoad();
					axios.post(basePath + "DeleteRole/" + this.selectedAll).then(response => {
						this.endLoad();
						this.refreshRoles();
					});
				}
			}
		}
	}

	const UserImageApproval = {
		mixins: [loadingMixin],
		template: "#UserImageApproval",
		data() {
			return {
				isNewUserImageApproved: false,
				unapproved: []
			}
		},
		created: function () {
			this.refreshData();
		},
		methods: {
			refreshData: function() {
				this.startLoad();
				axios.get(basePath + "GetImageApproval").then(response => {
					this.isNewUserImageApproved = response.data.isNewUserImageApproved;
					this.unapproved = response.data.unapproved;
					this.endLoad();
				});
			},
			approveImage: function(id) {
				this.startLoad();
				axios.post(basePath + "ApproveUserImage/" + id).then(response => {
					this.refreshData();
					this.endLoad();
				});
			},
			deleteImage: function(id) {
				this.startLoad();
				axios.post(basePath + "DeleteUserImage/" + id).then(response => {
					this.refreshData();
					this.endLoad();
				});
			}
		}
	}

	const EmailIpBan = {
		mixins: [loadingMixin],
		template: "#EmailIpBan",
		data() {
			return {
				ips: [],
				emails: [],
				newEmail: "",
				newIP: "",
				selectedIP: null,
				selectedEmail: null
			}
		},
		created: function() {
			this.refreshData();
		},
		methods: {
			refreshData: function() {
				this.startLoad();
				axios.get(basePath + "GetEmailIPBan").then(response => {
					this.emails = response.data.emails;
					this.ips = response.data.ips;
					this.endLoad();
				});
			},
			banEmail: function () {
				this.startLoad();
				axios.post(basePath + "BanEmail", {string: this.newEmail}).then(response => {
					this.endLoad();
					this.newEmail = "";
					this.refreshData();
				});
			},
			removeEmail: function() {
				this.startLoad();
				axios.post(basePath + "RemoveEmail", {string: this.selectedEmail}).then(response => {
					this.endLoad();
					this.refreshData();
				});
			},
			banIP: function () {
				this.startLoad();
				axios.post(basePath + "BanIP", {string: this.newIP}).then(response => {
					this.endLoad();
					this.newIP = "";
					this.refreshData();
				});
			},
			removeIP: function() {
				this.startLoad();
				axios.post(basePath + "RemoveIP", {string: this.selectedIP}).then(response => {
					this.endLoad();
					this.refreshData();
				});
			}
		}
	}

	const EmailUsers = {
		mixins: [loadingMixin],
		template: "#EmailUsers",
		data() {
			return {
				subject: "",
				body: "",
				htmlBody: "",
				errorMessage: "",
				isErrorVisible: false,
				isSuccess: false
			}
		},
		methods: {
			sendMail: function() {
				this.isErrorVisible = false;
				this.startLoad();
				axios.post(basePath + "EmailUsers", {subject: this.subject, body: this.body, htmlBody: this.htmlBody}).then(response => {
						this.endLoad();
						this.subject = "";
						this.body = "";
						this.htmlBody = "";
						this.isSuccess = true;
					})
					.catch(e => {
						this.endLoad();
						this.isErrorVisible = true;
						this.isSuccess = false;
						this.errorMessage = e.response.data.error;
					});
			}
		}
	}

	const ScoringGame = {
		mixins: [settingsMixin,loadingMixin],
		template: "#ScoringGame"
	}

	const EventDefinitions = {
		mixins: [loadingMixin],
		template: "#EventDefinitions",
		data() {
			return {
				allEvents: [],
				staticIDs: [],
				newEvent: {
					eventDefinitionID: "",
					description: "",
					pointValue: "",
					isPublishedToFeed: false
				}
			}
		},
		created: function() {
			this.refreshData();
		},
		methods: {
			refreshData: function() {
				this.startLoad();
				axios.get(basePath + "GetAllEventDefinitions").then(response => {
					this.allEvents = response.data.allEvents;
					this.staticIDs = response.data.staticIDs;
					this.endLoad();
				});
			},
			deleteEvent: function(event) {
				this.startLoad();
				axios.post(basePath + "DeleteEvent/" + event.eventDefinitionID)
					.then(response => {
						this.refreshData();
						this.endLoad();
					});
			},
			resetEvent: function() {
				this.newEvent.eventDefinitionID = "";
				this.newEvent.description = "";
				this.newEvent.pointValue = "";
				this.newEvent.isPublishedToFeed = false;
			},
			openNewEvent: function() {
				this.resetEvent();
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			createEvent: function() {
				this.startLoad();
				axios.post(basePath + "CreateEvent", this.newEvent)
					.then(response => {
						this.refreshData();
						const e = this.$refs.modal;
						$(e).modal("hide");
						this.endLoad();
					});
			}
		}
	}

	const AwardDefinitions = {
		mixins: [loadingMixin],
		template: "#AwardDefinitions",
		data() {
			return {
				allAwards: [],
				newAward: {
					awardDefinitionID: "",
					title: "",
					description: "",
					isSingleTimeAward: false
				}
			}
		},
		created: function() {
			this.refreshData();
		},
		methods: {
			refreshData: function() {
				this.startLoad();
				axios.get(basePath + "GetAllAwardDefinitions").then(response => {
					this.allAwards = response.data;
					this.endLoad();
				});
			},
			deleteAward: function(award) {
				this.startLoad();
				axios.post(basePath + "DeleteAward/" + award.awardDefinitionID)
					.then(response => {
						this.refreshData();
						this.endLoad();
					});
			},
			resetAward: function() {
				this.newAward.awardDefinitionID = "";
				this.newAward.title = "";
				this.newAward.description = "";
				this.newAward.isSingleTimeAward = false;
			},
			openNewAward: function() {
				this.resetAward();
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			createAward: function() {
				this.startLoad();
				axios.post(basePath + "CreateAward", this.newAward)
					.then(response => {
						this.refreshData();
						const e = this.$refs.modal;
						$(e).modal("hide");
						this.endLoad();
					});
			}
		}
	}

	const AwardDefinitionDetail = {
		mixins: [loadingMixin],
		template: "#AwardDefinitionDetail",
		data() {
			return {
				award: {},
				conditions: [],
				allEvents: [],
				newCondition: {
					awardDefinitionID: 0,
					eventDefinitionID: "",
					eventCount: 0
				}
			}
		},
		created: function () {
			this.refreshData();
		},
		methods: {
			refreshData: function () {
				this.startLoad();
				var u = basePath + "GetAward/" + this.$route.params.id;
				axios.get(u).then(response => {
					this.award = response.data.award;
					this.conditions = response.data.conditions;
					this.allEvents = response.data.allEvents;
					this.endLoad();
				});
			},
			deleteCondition: function(c) {
				this.startLoad();
				axios.post(basePath + "DeleteCondition", {awardDefinitionID : this.award.awardDefinitionID, eventDefinitionID: c.eventDefinitionID})
					.then(response => {
						this.refreshData();
						this.endLoad();
					});
			},
			createCondition: function () {
				this.newCondition.awardDefinitionID = this.award.awardDefinitionID;
				this.startLoad();
				axios.post(basePath + "CreateCondition", this.newCondition)
					.then(response => {
						this.refreshData();
						const e = this.$refs.modal;
						$(e).modal("hide");
						this.endLoad();
					});
			},
			openNewCondition: function() {
				this.newCondition.eventCount = "";
				const e = this.$refs.modal;
				$(e).modal("show");
			}
		}
	}

	const ManualEvent = {
		mixins: [loadingMixin],
		template: "#ManualEvent",
		data() {
			return {
				allEvents: [],
				searchName: "",
				searchResults: [],
				selectedUser: {},
				message: "",
				points: 0,
				eventDefinitionID: ""
			}
		},
		created: function () {
			axios.get(basePath + "GetAllEvents")
				.then(response => {
					this.allEvents = response.data;
				});
		},
		methods: {
			openSearch: function() {
				const e = this.$refs.modal;
				$(e).modal("show");
			},
			updateList: function () {
				if (this.searchName.length < 2) return;
				this.startLoad();
				axios.post(basePath + "GetNames", {string: this.searchName})
					.then(response => {
						this.searchResults = response.data;
						this.endLoad();
					});
			},
			chooseUser: function () {
				const e = this.$refs.modal;
				$(e).modal("hide");
			},
			createManualEvent: function() {
				this.startLoad();
				axios.post(basePath + "CreateManualEvent", {userID: this.selectedUser.userID, message: this.message, points: this.points})
					.then(response => {
						this.endLoad();
						this.message = "";
						this.points = 0;
					})
					.catch(error => {
						alert(error.response.data);
						this.endLoad();
					});
			},
			createExistingManualEvent: function() {
				this.startLoad();
				axios.post(basePath + "CreateExistingManualEvent", {userID: this.selectedUser.userID, message: this.message, points: null, eventDefinitionID: this.eventDefinitionID})
					.then(response => {
						this.endLoad();
						this.message = "";
					})
					.catch(error => {
						alert(error.response.data);
						this.endLoad();
					});
			}
		}
	}

	const routes = [
		{
			path: "/", component: Top, redirect: "/general",
			children: [
				{ path: "/general", component: General },
				{ path: "/categories", component: Categories },
				{ path: "/forums", component: Forums},
				{ path: "/forumpermissions", component: ForumPermissions },
				{ path: "/email", component: Email },
				{ path: "/search", component: Search },
				{ path: "/externallogins", component: ExternalLogins },
				{ path: "/edituser", component: EditUser },
				{ path: "/edituser/:id", component: EditUserDetail },
				{ path: "/userroles", component: UserRoles },
				{ path: "/userimageapproval", component: UserImageApproval },
				{ path: "/emailipban", component: EmailIpBan },
				{ path: "/emailusers", component: EmailUsers },
				{ path: "/scoringgame", component: ScoringGame },
				{ path: "/eventdefinitions", component: EventDefinitions },
				{ path: "/awarddefinitions", component: AwardDefinitions },
				{ path: "/awarddefinitions/:id", component: AwardDefinitionDetail },
				{ path: "/manualevent", component: ManualEvent }
			]
		},
		{ path: "*", redirect: "/general" }
	];

	const router = new VueRouter({
		caseSensitive: false,
		routes: routes,
		mode: "history",
		base: "/forums/admin/app"
	});

	const app = new Vue({
		router
	}).$mount("#app");

	Vue.config.devtools = true;

</script>

</body>
</html>
